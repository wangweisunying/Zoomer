/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Zoomer;

import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import model.DataBaseCon;
import model.LXDataBaseCon;
import model.StringOperation;

/**
 *
 * @author Wei Wang
 */
public class SoyZoomer extends Zoomer{
    private static float qcArr[] = new float[]{2.1f, 3.9f, 1.05f};
    private static int testCodeCt = 22;
    public static int getTestCodeCount(){
        return testCodeCt;
    }
    public static float[] getQcArr(){
        return qcArr;
    }
    public SoyZoomer() {
        super();
        test_name = "Soy";
        testcode = new String[]{"GLY_M_1_IGG",
"GLY_M_2_IGG",
"GLY_M_3_IGG",
"GLY_M_4_IGG",
"GLY_M_5_IGG",
"GLY_M_6_IGG",
"GLY_M_7_IGG",
"GLY_M_8_IGG",
"GLY_M_BD_30K_IGG",
"KUNITZ_SOYBEAN_TRYPSIN_INHIBITOR_IGG",
"CRY1AC_GMO_PROTEIN_IGG",
"GLY_M_1_IGA",
"GLY_M_2_IGA",
"GLY_M_3_IGA",
"GLY_M_4_IGA",
"GLY_M_5_IGA",
"GLY_M_6_IGA",
"GLY_M_7_IGA",
"GLY_M_8_IGA",
"GLY_M_BD_30K_IGA",
"KUNITZ_SOYBEAN_TRYPSIN_INHIBITOR_IGA",
"CRY1AC_GMO_PROTEIN_IGA"
                };

        // class , protein , info_id ,squences
        conditions = new Condition[testcode.length / 2];
        conditions[0] = new Condition("", "", "","DKSIIYEGSANPVAPTIQLTRNQMD%VNSIKSVKTASWGLANGQIARILIT%SYGVPTSRSLGRALYAAPIQIWDSE%EKAPSMVEGVVTYGPWGGTGGYVFD%ALSFNFTSFDPNDKSIIYEGSANPV%FDTYYNQKWDPASRHIGIDVNSIKS%VGIHGRSGLFLDSLGVHAIEGKVIV%PGTQTVTLSHDIELNKVLPEWVRVG%DLILQGDATTGASSENDKNVLQLTK%SVKTAPWGFANGQVAQILITYNADT%TSLLVASLVHPSRKTSYILSETVSL%ASLSHAYGLFVAVAVGANIYGGHIN%AVSCRFHKFGDDQKNLVFQGDATSS%FLAPAGLKIPNATKGGSLGLTLDNQ%YAAPIQIWDSETGKVASWATSFKFN%MEIISREPSISEIDNPQWLVVAKPA%SVWSVKHGGNGGNTMHRIKLEYPNE%CSIQIEYDRYKQSVWSVKHGGNGGN%KISSFKEPNNIEPKEKIVFVEKAPS%SIEGYYGSLSQWGPIFIRSLSFESN%ISGYYGSLMYMGPAVIRSLTFHTTK%IVGANILGGGAFDGASMDPAVSFGP%DYPDEFLTSIEGYYGSLSQWGPIFI%KTNKSLSLPLMAFTMATMFLMLLNR%VYWLGPFIGSAAAAILYDNIFIGDD%GVPTSRSLGRALYAAPIQIWDSETG%EYPNEVLTCISGYYGSVTADEQPII%TYDADTSLLVASLIHPSRKTSYILS%NTTNAVSCRFHKFGDDQKNLVFQGD%SFSFNNFSEDQEDLILQGDATTGAS%LGLFPSDNVVAVEFDTYPNRDKGDP%SFASKLSDGSTSDTLDLASFLLNEA%GLSASTGQQKQTNTIHSWSLAFNNR%INSLRSVANVTWLADIKEVKLNEAW%LSQWGPIFIRSLSFESNKKLYGPFG%EVLTCISGYYGSVTADEQPIIIKSL%MGLWNTTNAVSCRFHKFGDDQKNLV%LFTFAPYFTSKASRCVIKEPAPCGP%PVHLWESSTVVASFETDFTFSISSD%TYFTTKLREGKVVGIHGRSGLFLDS%RAAFAELFSMLIFVFAGQGSGMAYS%FASKLSDGSTSDTLDLASFLLNEAI%MSFEEKPVSVGPWGGNGGYHWDDGV%ELNKVLPEWVRVGLSASTGQQKQTN%VASLVHPSRKTSYILSETVSLKSNL%GKVASWATSFKFNVFSPDKTADGLA%VGGSVGRVLYSSPVHLWESSTVVAS%LLIIPYASALSFNFTSFDPNDKSII%NTTNAVSCRFHKFGDDQKNLVFQGD%KQGSSIWSLKYGGSGGYKIDKIKLD"); 
        conditions[1] = new Condition
        conditions[2] = new Condition
        conditions[3] = new Condition("", "", "","LADIKEVKLNEAWISYNSSSLNLSV%GGKPVGGSVGRVLYSSPVHLWESST%NFSIVLSLSLAFFLVLLTKANSTNT%GVVTYGPWGGTGGYVFDDGPYTGVR%LFTFAPYFTSKASRCVIKEPAPCGP%FSATTGANKGFAETHDVFSWSFASK%AELFSMLIFVFAGQGSGMAYSKLIG%SGKPEFGSVGRVLYFAPVHLWKSSQ%SISSDSTTPGDGLAFFIAPFDTKIP%ILRRESSYILSDVLDLKVALPEWVR%TLDNQRLNSTDNPFVAVEFDIYKNP%GVEQGTYFSLPMTGGKIVGFHGRYG%SVGQGYDIVLALKQKDDFGKSPTVK%THHWVYWLGPFIGSAAAAILYDNIF%LYDLDGEPVWGYKHGGAGGFKHEKI%PGDGLAFFIAPFDTKIPPNSGGSNL%SSQQPKPSKALSYSQNNMTNATDNG%SVTTTKWDWQNGKTVTAQISYNSAS%YATRVDPKKENVCNSRNVGVIAPIA%FIGGNITLLRRLNLILTLFVLDRKH%YATRVDPKKENVCNSRNVGVIAPIA%ATGNATAIHSVNSWILAQLWQHKKT%WDPASRHIGIDVNSIKSVKTAPWGF%VFQGDATSSSRGIELTKLDGGGKPV%MATSNFSIVLSLSLAFFLVLLTKAN%IFQGDAAISPSGVLRLTKVDSYGVP%GQIARILITYDADTSLLVASLIHPS%VYSTVRQLVIVHGEGIDSIQIEYDK%TKVDSYGVPTSRSLGRALYAAPIQI%PAAIRAAFAELFSMLIFVFAGQGSG%RNRSKYGDGMAFFLAPAGLKIPNAT%ATDNGRYSVIQGSVGQGYDIVLALK%NLILTLFVLDRKHLSLSSGVSVWNA%ILSDVLDLKVALPEWVRIGFSATTG%TSWLLLWSILRRESSYILSDVLDLK%SPTVKISSFKEPNNIEPKEKIVFVE%YTGVRQIDLSRNVGIVWIRALYDLD%ATDNGRYSVIQGSVGQGYDIVLALK%VGRVLYFAPVHLWKSSQLVSTFETT%ATVHISYNSASKRLTVAAFYPGTQT%VGIHGRSGLFLDSLGVHAIEGKVIV%KIKLDYPDEFLTSIEGYYGSLSQWG%EANTLLSWSFSSSLQTNQIQKEDMH%SVGQGYDIVLALKQKDDFGKSPTVK%TADGLAFFLAPVGSKPQSKGGFLGL%TYFTTKLREGKVVGIHGRSGLFLDS%FNSDSKNMSLQTVAVEFDTYYNQKW%VSPREASNPAAIRAAFAELFSMLIF%NSSSLNLSVVLNVFNNDTDHTIQQQ%GSAAAAILYDNIFIGDDGQEPLTNS");
        conditions[4] = new Condition("", "", "","DFTIHFSFVIDSRNRSKYGDGMAFF%RYKQSVWSVKHGGNGGNTMHRIKLE%CNSRNVGVIAPIAIGSIVGANILGG%TPGAGGQDLGLFPHLTSLKNSSSSH%IELTKLDGGGKPVGGSVGRVLYSSP%VLSLSLAFFLVLLTKANSTNTVSFT%TIQQQYLSAKVDRRLYLPELVTFGF%SSQQPKPSKALSYSQNNMTNATDNG%HFSFVIDSRNRSKYGDGMAFFLAPA%LSRNVGIVWIRALYDLDGEPVWGYK%QGDATTGASSENDKNVLQLTKLDDS%KIKLDYPDEFLTSIEGYYGSLSQWG%YNADTSLLVASLVHPSRKTSYILSE%LYDLDGEPVWGYKHGGAGGFKHEKI%NTMHRIKLEYPNEVLTCISGYYGSV%WKSSQLVSTFETTFTFKISSASPDS%GEGIDSIQIEYDKQGSSIWSLKYGG%SLAFFLVLLTKANSTNTVSFTVSKF%TLDNQRLNSTDNPFVAVEFDIYKNP%GGQDLGLFPHLTSLKNSSSSHHRKV%SPDTTPGAGGQDLGLFPHLTSLKNS%IYKNPYDPPGEHVGIDINSLRSVAN%NSITSVTTTKWDWQNGKTVTAQISY%RKTSYILSETVSLKSNLPEWVNVGF%NFPYHHFLVMLLSIFFLLIIPYASA%TKGGSLGLTLDNQRLNSTDNPFVAV%IYEGSANPVAPTIQLTRNQMDKNMI%SYILSETVSLKSNLPEWVNIGFSAT%EPVVAVEFDTFINTDIGDPEYQHIG%APVEQHYVEEDILFTFAPYFTSKAS%IPNATKGGSLGLTLDNQRLNSTDNP%LHGRSSMYLDAIGVHMQHWLGGIQK%SRCVIKEPAPCGPGPWGGDGGRPWD%YKAGFLGLFNSDSKNMSLQTVAVEF%DLILQGDATTGASSENDKNVLQLTK%DKNVLQLTKLDDSGKPEFGSVGRVL%YAAPIQIWDSETGKVASWATSFKFN%ASPDSVPADGLAFFIASPDTTPGAG%CSIQIEYDRYKQSVWSVKHGGNGGN%RIAIVSPREASNPAAIRAAFAELFS%SISEIDNPQWLVVAKPAPVEQHYVE%IDNPQWLVVAKPAPVEQHYVEEDIL%SVWNALIFEIVMTFGLVYTVYATRV%PPNSGGSNLGLFPSDNVVAVEFDTY%SASTGQQKQTNTIHSWSLAFNNRIG%YKIDKIKLDYPDEFLTSIEGYYGSL%VLALKQKDDFGKSPTVKISSFKEPN%HIGIDVNSIVSKATARWEWQNGKIA%APVGSKPQYKAGFLGLFNSDSKNMS%VHPSRKTSYILSETVSLKSNLPEWV");
        conditions[5] = new Condition("", "", "","TVAVEFDTYYNAKWDPANRHIGIDV%PAVVSWSWTHHWVYWLGPFIGSAAA%NFSIVLSLSLAFFLVLLTKANSTNT%NSIKSVKTAPWGFANGQVAQILITY%PRQQNLILQGDAAISPSGVLRLTKV%KLDGGGKPVGGSVGRVLYSSPVHLW%HHFLVMLLSIFFLLIIPYASALSFN%VLSLSLAFFLVLLTKANSTNTVSFT%KANSTNTVSFTTSKFSPRQQNLILQ%QLVSTFETTFTFKISSASPDSVPAD%LGLFPSDNVVAVEFDTYPNRDKGDP%KYGDGMAFFLAPAGLKIPNATKGGS%LSQWGPIFIRSLSFESNKKLYGPFG%SKRLTVVASYPDSTPVSLYYDIDLF%ALYAAPIQIWDSETGKVASWATSFK%VYTVYATRVDPKKENVCNSRNVGVI%ALSFNFTSFDPNDKSIIYEGSANPV%RIKLEYPNEVLTCISGYYGSVTADE%LDRKHLSLSSGVSVWNALIFEIVMT%GSKPQSKGGFLGLFNSDSKNKSVQT%YYGSLSQWGPIFIRSLSFESNKKLY%PDKTADGLAFFLAPVGSKPQYKAGF%CISGYYGSVTADEQPIIIKSLTFHT%YATRVDPKKENVCNSRNVGVIAPIA%IQLTRNQMDKNMIGSIGRATYCQPM%AAFYPGTQTVTLSHDIELNKVLPEW%NKGFVETHDVFSWSFASKLSDGSTS%NSITSVTTTKWDWQNGKTVTAQISY%KWDPANRHIGIDVNSIKSVKTASWG%VLPEWVRVGLSASTGQQKQTNTIHS%PEWVRIGFSATTGLNVASETHDAPQ%EKAPSMVEGVVTYGPWGGTGGYVFD%YTGVRQIDLSRNVGIVWIRALYDLD%ISYNSASKRLTVAAFYPGTQTVTLS%LFNSDSKNKSVQTVAVEFDTYYNAK%GQGSGMAYSKLIGNGPATPGGLLVA%GMAYSKLIGNGPATPGGLLVASLSH%THHWVYWLGPFIGSAAAAILYDNIF%YYGSLSQWGPIFIRSLSFESNKKLY%VYTVYATRVDPKKENVCNSRNVGVI%YPNRDKGDPDYRHIGIDVNSIVSKA%FSAATGNATAIHSVNSWILAQLWQH%GNGGNTMHRIKLEYPNEVLTCISGY%DTSLLVASLIHPSRKTSYILSETVS%DDGVFSGIKQIYLTKAPEGICSIQI%TNTVSFTTSKFSPRQQNLILQGDAA%ATPGGLLVASLSHAYGLFVAVAVGA%NPAVTFGAFIGGNITLLRRLNLILT%LAPVGSKPQSKGGFLGLFNSDSKNK%GSAAAAILYDNIFIGDDGQEPLTNS");
        conditions[6] = new Condition("", "", "","NMTNATDNGRYSVIQGSVGQGYDIV%SRKTSYILSETVSLKSNLPEWVNIG%HGRYGWHLDAIGVNLKSSQQPKPSK%DKNMIGSIGRATYCQPMHLWDKATG%SASKRLTVAAFYPGTQTVTLSHDIE%LRRLNLILTLFVLDRKHLSLSSGVS%SLPMTGGKIVGFHGRYGWHLDAIGV%AIGVHMQHWLGGIQKTSKLSFFKLF%VAKPAPVEQHYVEEDILFTFAPYFT%ISGYYGSLMYMGPAVIRSLTFHTTK%IQIWDSETGKVASWATSFKFNVFSP%DAIGVNLKSSQQPKPSKALSYSQNN%VYSTVRQLVIVHGEGIDSIQIEYDK%NLILTLFVLDRKHLSLSSGVSVWNA%IEYDKQGSSIWSLKYGGSGGYKIDK%LTFHTSRGQYGPFGDEVGKYFTSTT%GYDIVLALKQKDDFGKSPTVKISSF%VGKYFTSTTTEGKVVGLHGRSSMYL%RQIDLSRNVGIVWIRALYDLDGEPV%CISGYYGSVTADEQPIIIKSLTFHT%FDPNDKSIIYEGSANPVAPTIQLTR%MLLTKANSTNTVSFTTSKFSPRQQN%LFVAVAVGANIYGGHINPAVTFGAF%RNQMDKNMIGSIGRATYCQPMHLWD%RILITYDADTSLLVASLIHPSRKTS%NFTSFDPNDKSIIYEGSANPVAPTI%ATPGGLLVASLSHAYGLFVAVAVGA%SKRLTVVASYPDSTPVSLYYDIDLF%TTEGKVVGLHGRSSMYLDAIGVHMQ%FGDDQKNLVFQGDATSSSRGIELTK%NLILTLFVLDRKHLSLSSGVSVWNA%FGDDQKNLVFQGDATSSSRGIELTK%AIGSIVGANILGGGAFDGASMDPAV%DLASEPVVAVEFDTFINTDIGDPEY%DFGKSPTVKISSFKEPNNIEPKEKI%IVGANILGGGAFDGASMDPAVSFGP%YGPFGVEQGTYFSLPMTGGKIVGFH%GIDVNSIKSVKTAPWGFANGQVAQI%EEDILFTFAPYFTSKASRCVIKEPA%FASKLSDGSTSDTLDLPSFLLNEAI%QGDAAISPSGVLRLTKVDSYGVPTS%NFTSFDPNDKSIIYEGSANPVAPTI%TSLLVASLVHPSRKTSYILSETVSL%ATPGGLLVASLSHAYGLFVAVAVGA%SFETDFTFSISSDSTTPGDGLAFFI%KLDDSGKPEFGSVGRVLYFAPVHLW%GKVIVPVATSPSMEIISREPSISEI%RIGFSATTGLNVASETHDAPQLIEV%FVFAGQGSGMAYSKLIGNGPATPGG%SGVLRLTKVDSYGVPTSRSLGRALY");
        conditions[7] = new Condition
        conditions[8] = new Condition("", "", "","VYTVYATRVDPKKENVCNSRNVGVI%PGTQTVTLSHDIELNKVLPEWVRVG%IAPIAIGSIVGANILGGGAFDGASM%GFSATTGLNKGFVETHDVFSWSFAS%FSGIKQIYLTKAPEGICSIQIEYDR%VYWLGPFIGSAAAAILYDNIFIGDD%MPPPTSWLLLWSILRRESSYILSDV%GPFIGSAAAAILYDNIFIGDDGQEP%HHFLVMLLSIFFLLIIPYASALSFN%VGIVWIRALYDLDGEPVWGYKHGGA%YGSLMYMGPAVIRSLTFHTTKRSYG%MAIDRIAIVSPREASNPAAIRAAFA%ASLSHAYGLFVAVAVGANIYGGHIN%TTEGKVVGLHGRSSMYLDAIGVHMQ%APCGPGPWGGDGGRPWDDGVFSGIK%EFDTYYNAKWDPANRHIGIDVNSIK%LPELVTFGFSAATGNATAIHSVNSW%SASTGGAAEANTLLSWSFSSSLQTN%VRQLVIVHGEGIDSIQIEYDKQGSS%SYILSETVSLKSNLPEWVNIGFSAT%AIGSIVGANILGGGAFDGASMDPAV%IAPIAIGSIVGANILGGGAFDGASM%NKKLYGPFGVEQGTYFSLPMTGGKI%TGVKDLASEPVVAVEFDTFINTDIG%TVSKFSPRQQNLIFQGDAAISPSGV%YYNAKWDPANRHIGIDVNSIKSVKT%EIVMTFGLVYTVYATRVDPKKENVC%GDPEYQHIGIDINSITSVTTTKWDW%PYDPPGEHVGIDINSLRSVANVTWL%IPNATKGGSLGLTLDNQRLNSTDNP%TASWGLANGQIARILITYDADTSLL%GGYHWDDGVYSTVRQLVIVHGEGID%HAIEGKVIVPVATSPSMEIISREPS%SMLIFVFAGQGSGMAYSKLIGNGPA%RRLYLPELVTFGFSAATGNATAIHS%LVASLIHPSRKTSYILSETVSLKSN%DSIQIEYDKQGSSIWSLKYGGSGGY%QYLSAKVDRRLYLPELVTFGFSAAT%SSGVSVWNALIFEIVMTFGLVYTVY%VEFDIYKNPYDPPGEHVGIDINSLR%NTMHRIKLEYPNEVLTCISGYYGSV%LTKANSTNTVSFTVSKFSPRQQNLI%YYGSVTADEQPIIIKSLTFHTSRGQ%IYKNPYDPPGEHVGIDINSLRSVAN%SASTGGAAEANTLLSWSFSSSLQTN%DSETGKVASWATSFKFNVFSPDKTA%GSGGYKIDKIKLDYPDEFLTSIEGY%IVFVEKAPSMVEGVVTYGPWGGTGG%LLWSILRRESSYILSDVLDLKVALP%EANTLLSWSFSSSLQTNQIQKEDMH");  
        conditions[9] = new Condition("", "", "","KHEKIIFDFPYEVLTHISGYYGSLM%GGAFDGASMDPAVSFGPAVVSWSWT%QKNLVFQGDATSSSRGIELTKLDGG%VLALKQKDDFGKSPTVKISSFKEPN%LDRKHLSLSSGVSVWNALIFEIVMT%FSATTGANKGFAETHDVFSWSFASK%KENVCNSRNVGVIAPIAIGSIVGAN%MATSNFSIVLSLSLAFFLVLLTKAN%DTKIPPNSGGSNLGLFPSDNVVAVE%TPGAGGQDLGLFPHLTSLKNSSSSH%QLVSTFETTFTFKISSASPDSVPAD%AGLKIPNATKGGSLGLTLDNQRLNS%APVEQHYVEEDILFTFAPYFTSKAS%EEDILFTFAPYFTSKASRCVIKEPA%GPFIGSAAAAILYDNIFIGDDGQEP%VPVATSPSMEIISREPSISEIDNPQ%IQIWDSETGKVASWATSFKFNVFSP%WVRVGLSASTGQQKQTNTIHSWSLA%VETHDVFSWSFASKLSDGSTSDTLD%EFGSVGRVLYFAPVHLWKSSQLVST%AQISYNSASKRLTVVASYPDSTPVS%LSRNVGIVWIRALYDLDGEPVWGYK%SIEGYYGSLSQWGPIFIRSLSFESN%VKHGGNGGNTMHRIKLEYPNEVLTC%GYVFDDGPYTGVRQIDLSRNVGIVW%DIDLFTILPEWVRVGFSASTGGAAE%SLQTVAVEFDTYYNQKWDPASRHIG%QQNLIFQGDAAISPSGVLRLTKVDS%LVASLIHPSRKTSYILSETVSLKSN%GQGSGMAYSKLIGNGPATPGGLLVA%EYPNEVLTCISGYYGSVTADEQPII%ATARWEWQNGKIATVHISYNSASKR%PKEKIVFVEKAPSMVEGVVTYGPWG%YPNRDKGDPDYRHIGIDVNSIVSKA%KANSTNTVSFTTSKFSPRQQNLILQ%SLKSNLPEWVNIGFSATTGLNKGFV%LFLDSLGVHAIEGKVIVPVATSPSM%PKEKIVFVEKAPSMVEGVVTYGPWG%NILGGGAFDGASMDPAVSFGPAVVS%SSMYLDAIGVHMQHWLGGIQKTSKL%AVSCRFHKFGDDQKNLVFQGDATSS%ETHDVFSWSFASKLSDGSTSDTLDL%DGASMDPAVSFGPAVVSWSWTHHWV%WISYNSSSLNLSVVLNVFNNDTDHT%VVLNVFNNDTDHTIQQQYLSAKVDR%LKSNLPEWVNVGFSATTGANKGFAE%LKSNLPEWVNVGFSATTGANKGFAE%KQIYLTKAPEGICSIQIEYDRYKQS%MEIISREPSISEIDNPQWLVVAKPA%GGSNLGLFPSDNVVAVEFDTYPNRD"); 
        conditions[10] = new Condition("", "", "","FFIASPDTTPGAGGQDLGLFPHLTS%ATARWEWQNGKIATVHISYNSASKR%EFLTSIEGYYGSLSQWGPIFIRSLS%GGAAEANTLLSWSFSSSLQTNQIQK%VAVGANIYGGHINPAVTFGAFIGGN%HAIEGKVIVPVATSPSMEIISREPS%FASKLSDGSTSDTLDLASFLLNEAI%MLLNRVNSADSLSFSFNNFSEDQED%ATGNATAIHSVNSWILAQLWQHKKT%ALIFEIVMTFGLVYTVYATRVDPKK%VAPTIQLTRNQMDKNMIGSIGRATY%KEVKLNEAWISYNSSSLNLSVVLNV%GLLVASLSHAYGLFVAVAVGANIYG%PEGICSIQIEYDRYKQSVWSVKHGG%VKHGGNGGNTMHRIKLEYPNEVLTC%LFVAVAVGANIYGGHINPAVTFGAF%SLGVHAIEGKVIVPVATSPSMEIIS%KFKVTADGLAFFLAPVGSKPQSKGG%LPELVTFGFSAATGNATAIHSVNSW%LNEAWISYNSSSLNLSVVLNVFNND%FLVLLTKANSTNTVSFTVSKFSPRQ%RVGFSASTGGAAEANTLLSWSFSSS%YSQNNMTNATDNGRYSVIQGSVGQG%VFSWSFASKLSDGSTSDTLDLASFL%ANRHIGIDVNSIKSVKTASWGLANG%PHLTSLKNSSSSHHRKVTRITGVKD%NITLLRRLNLILTLFVLDRKHLSLS%PRQQNLILQGDAAISPSGVLRLTKV%VGIDINSLRSVANVTWLADIKEVKL%DDGPYTGVRQIDLSRNVGIVWIRAL%VNLKSSQQPKPSKALSYSQNNMTNA%HHRKVTRITGVKDLASEPVVAVEFD%KRSYGPFGDEYGTYFTTKLREGKVV%HIGIDVNSIVSKATARWEWQNGKIA%SPDTTPGAGGQDLGLFPHLTSLKNS%TKVDSYGVPTSRSLGRALYAAPIQI%QVAQILITYNADTSLLVASLVHPSR%KQKDDFGKSPTVKISSFKEPNNIEP%KVALPEWVRIGFSATTGLNVASETH%VIDSRNRSKYGDGMAFFLAPAGLKI%GKVASWATSFKFNVFSPDKTADGLA%DVNSIVSKATARWEWQNGKIATVHI%WIRALYDLDGEPVWGYKHGGAGGFK%RQIDLSRNVGIVWIRALYDLDGEPV%NPAVTFGAFIGGNITLLRRLNLILT%FIGGNITLLRRLNLILTLFVLDRKH%FTSTTTEGKVVGLHGRSSMYLDAIG%LIHPSRKTSYILSETVSLKSNLPEW%SHDIELNKVLPEWVRVGLSASTGQQ%ALYAAPIQIWDSETGKVASWATSFK"); 
        double[][] equation_parameter = new double[][]{
            {0.00440823877230885,-21.280434689439},
{0.00545833060393336,-28.7257389445556},
{0.00283074171803343,-15.0316428149394},
{0.00518023577217753,-26.0222314770269},
{0.0116258733211287,-61.603881110722},
{0.00281558160511141,-12.4761304804205},
{0.002251172893721,-10.2948173143887},
{0.00166129892770799,-6.01574098015709},
{0.00500187619791277,-22.2161757406944},
{0.00317870573523853,-12.9653905204504},
{0.0124150061068218,-57.6327542990331},
{0.00514992793337553,-28.2054560610532},
{0.00667938632382585,-33.4589647343698},
{0.00149711041190088,-7.58168297452885},
{0.00220103637783073,-12.3337517838729},
{0.00345051913474354,-20.981136301472},
{0.00359228026413141,-18.3722887206194},
{0.0145061640625512,-92.0123966563073},
{0.00166133611720127,-6.44673467142377},
{0.00326775831207913,-13.4565665981549},
{0.00530817124845294,-24.36816260854},
{0.00433748449203293,-21.6173375009688}
                                            };
       
        for(int i = 0 ; i < testcode.length ; i++){
            equation_parameter_map.put(testcode[i], equation_parameter[i]);
        }
    }
    public static Map<String , DupData> getDupUnitData(Map<String , String[]> loc_sample_map) throws SQLException, Exception{
        Map<String , DupData> mapUnit = new HashMap();
        
        List<Integer> julienList = new ArrayList();
        for(String[] info : loc_sample_map.values()){
            julienList.add(Integer.parseInt(info[1]));
        }
        String sqlJu = StringOperation.getSampleSql(julienList).toString();
        
         Map<String , String> old2NewMap = new HashMap();
        DataBaseCon db = new LXDataBaseCon();
        String sql = "SELECT\n" +
"   group_concat(sd.julien_barcode order by sd.julien_barcode desc) as julien\n" +
"FROM\n" +
"    vibrant_america_information.`patient_details` pd\n" +
"        JOIN\n" +
"    vibrant_america_information.`sample_data` sd ON sd.`patient_id` = pd.`patient_id`\n" +
"        JOIN\n" +
"    vibrant_america_information.`customers_of_patients` cop ON cop.`patient_id` = sd.`patient_id`\n" +
"        AND cop.`customer_id` = sd.`customer_id`\n" +
"        join\n" +
"          vibrant_america_information.`customer_details` cd on  cd.customer_id = sd.customer_id\n" +
"        AND cop.`customer_id` = sd.`customer_id`\n" +
"        join vibrant_america_information.selected_test_list slt on slt.sample_id = sd.sample_id\n" +
"        join `vibrant_america_test_result`.`result_soy_zoomer_panel1` rwp on rwp.sample_id = sd.sample_id \n" +
"WHERE\n" +
"   slt.order_soy_zoomer_panel1 != 0 \n" +
"   group by PD.PATIENT_ID having count(*)>=2 and julien REGEXP '"+ sqlJu.replaceAll(",", "|")  +"'   order by substring(group_concat(sd.julien_barcode order by sd.julien_barcode desc),1,10) desc;";
        System.out.println(sql);
        ResultSet rs = db.read(sql);
        while(rs.next()){
            String[] tmp = rs.getString(1).split(",");
            old2NewMap.putIfAbsent(tmp[1], tmp[0]);
        }
        
        List<Integer> newJulienList = new ArrayList();
        for(String tmp : old2NewMap.keySet()) newJulienList.add(Integer.parseInt(tmp));
    
        if(!newJulienList.isEmpty()){
            String sqlData = 
    "select julien_barcode , a.* from vibrant_america_information.sample_data as sd join\n" +
    "`vibrant_america_test_result`.result_soy_zoomer_panel1 as a on sd.sample_id = a.sample_id\n" +
    " where julien_barcode in ("+ StringOperation.getSampleSql(newJulienList).toString() +");";
            ResultSet rsData = db.read(sqlData);
            
            int col = rsData.getMetaData().getColumnCount();
            while(rsData.next()){
                 Map<String ,Float> curMap = new HashMap();
                 String oldJulien = rsData.getString(1);
                 String newJulien = old2NewMap.get(oldJulien);
                 for(int i = 2 ; i <= col ; i++){
                     String label = rsData.getMetaData().getColumnLabel(i);
                     if(label.equals("sample_id")) continue;
                     curMap.put(label , rsData.getFloat(i));
                 }
                 mapUnit.put(newJulien , new DupData(oldJulien , curMap));
            }
        }
        db.close();
        return mapUnit;
    }
}
